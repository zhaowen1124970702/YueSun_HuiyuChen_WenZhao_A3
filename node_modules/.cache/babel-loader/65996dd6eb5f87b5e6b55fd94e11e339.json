{"ast":null,"code":"var _jsxFileName = \"/Users/yue/Desktop/5610/5610fianlProject/YueSun_HuiyuChen_WenZhao_A3/src/Component/Post.js\";\nimport React from 'react';\nimport Comment from './Comment';\nimport Axios from 'axios';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      idForQuery: props.query,\n      loginUser: null,\n      currentPost: null,\n      allComments: [],\n      newComment: \"\",\n      editing: false,\n      message: \"\",\n      title: \"\",\n      URL: \"\",\n      content: \"\"\n    };\n  }\n\n  getParams(location) {\n    const searchParams = new URLSearchParams(location.search);\n    return {\n      query: searchParams.get(\"query\") || \"\"\n    };\n  }\n\n  componentWillMount() {\n    Axios.get('/api/post/' + this.state.idForQuery).then(response => {\n      if (!response.data._id) {\n        window.location.href = \"/\";\n      }\n    }).catch(error => console.error(error));\n  }\n\n  componentDidMount() {\n    Axios.get('/api/login/cookie').then(response => {\n      this.setState({\n        loginUser: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        loginUser: null\n      });\n    });\n    Axios.get('/api/post/' + this.state.idForQuery).then(response => {\n      this.setState({\n        currentPost: response.data,\n        title: response.data.title,\n        username: response.data.username,\n        URL: response.data.URL,\n        content: response.data.content\n      });\n    }).catch(error => console.error(error));\n    Axios.get('/api/comment/' + this.state.idForQuery).then(response => {\n      this.setState({\n        allComments: response.data\n      });\n    }).catch(error => {\n      console.error(error);\n      this.setState({\n        allComments: []\n      });\n    });\n  }\n\n  componentDidUpdate() {}\n\n  submitDelete() {\n    Axios.delete('/api/post/' + this.state.currentPost._id).catch(error => {\n      this.setState({\n        message: \"Fail to delete post\"\n      });\n    });\n    Axios.delete('/api/comment/' + this.state.currentPost._id).then(response => {\n      window.location.href = \"/\";\n    }).catch(error => {\n      this.setState({\n        message: \"Fail to delete all comments\"\n      });\n    });\n  }\n\n  showEditandDelete() {\n    if (this.state.loginUser === this.state.currentPost.username) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => this.changeToEditingMode(),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => this.submitDelete(),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  showPost() {\n    if (!this.state.editing) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Title: \", this.state.currentPost.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Editor: \", this.state.currentPost.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.currentPost.postTime.slice(0, 10) + \" \" + this.state.currentPost.postTime.slice(11, 19)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"URL: \", this.state.currentPost.URL]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Content: \", this.state.currentPost.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.showEditandDelete()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.title,\n          onChange: e => this.setState({\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Editor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), this.state.currentPost.username, this.state.currentPost.postTime, /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.URL,\n          onChange: e => this.setState({\n            URL: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.content,\n          onChange: e => this.setState({\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => this.submitEdit(),\n          children: \"Submit Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  submitEdit() {\n    const newPost = {};\n    newPost._id = this.state.currentPost._id;\n    newPost.title = this.state.title;\n    newPost.URL = this.state.URL;\n    newPost.content = this.state.content;\n\n    if (!newPost.content && !newPost.URL || newPost.content && newPost.URL) {\n      this.setState({\n        message: \"Only need URL or Content\"\n      });\n      return;\n    }\n\n    if (!newPost.title) {\n      return this.setState({\n        message: \"Please input title for the new post\"\n      });\n    }\n\n    Axios.put('/api/post', newPost).then(response => {\n      const postID = response.data._id;\n      window.location.href = \"post?id=\" + postID;\n    }).catch(error => {\n      this.setState({\n        message: \"Fail to update Post\"\n      });\n    });\n  }\n\n  changeToEditingMode() {\n    this.setState({\n      editing: true\n    });\n  }\n\n  submitAddNewComment() {\n    const newComment = {\n      editorUsername: this.state.loginUser,\n      postID: this.state.idForQuery,\n      content: this.state.newComment\n    };\n\n    if (this.state.newComment) {\n      Axios.post('/api/comment', newComment).then(response => {\n        window.location.href = \"post?id=\" + this.state.idForQuery;\n      }).catch(error => {\n        this.setState({\n          message: \"Fail to add new comment\"\n        });\n      });\n    }\n  }\n\n  showAddSubmit() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.newComment,\n        onChange: e => this.setState({\n          newComment: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.submitAddNewComment(),\n        children: \"Add Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this);\n  }\n\n  displayErrorMessage() {\n    if (this.state.message) {\n      return this.state.message;\n    }\n  }\n\n  render() {\n    if (!this.state.currentPost) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.redirectToHomePage(),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), this.showPost(), this.displayErrorMessage(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [this.state.allComments.length, \" comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), this.showAddSubmit(), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.allComments.map((singleComment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n          comment: singleComment,\n          loginUser: this.state.loginUser\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 74\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/yue/Desktop/5610/5610fianlProject/YueSun_HuiyuChen_WenZhao_A3/src/Component/Post.js"],"names":["React","Comment","Axios","Navbar","Post","Component","constructor","props","state","idForQuery","query","loginUser","currentPost","allComments","newComment","editing","message","title","URL","content","getParams","location","searchParams","URLSearchParams","search","get","componentWillMount","then","response","data","_id","window","href","catch","error","console","componentDidMount","setState","username","componentDidUpdate","submitDelete","delete","showEditandDelete","changeToEditingMode","showPost","postTime","slice","e","target","value","submitEdit","newPost","put","postID","submitAddNewComment","editorUsername","post","showAddSubmit","displayErrorMessage","render","redirectToHomePage","length","map","singleComment","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Comment from './Comment';\nimport Axios from 'axios';\nimport Navbar from './Navbar';\n\n\nexport default class Post extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            idForQuery : props.query,\n            loginUser: null,\n            currentPost : null,\n            allComments : [],\n            newComment : \"\",\n            editing: false,\n            message:\"\",\n            title:\"\",\n            URL:\"\",\n            content:\"\"\n        }\n    }\n\n    getParams(location) {\n        const searchParams = new URLSearchParams(location.search);\n        return {\n          query: searchParams.get(\"query\") || \"\"\n        };\n      }\n\n    \n    componentWillMount(){\n        Axios.get('/api/post/' + this.state.idForQuery)\n            .then((response) => {\n                if(!response.data._id){\n                    window.location.href = \"/\";\n                }\n                })\n            .catch(error => console.error(error));\n\n    }\n\n\n    componentDidMount() {\n        Axios.get('/api/login/cookie')\n            .then((response) => {\n                this.setState({\n                    loginUser: response.data\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    loginUser: null\n                })\n        })\n\n        Axios.get('/api/post/' + this.state.idForQuery)\n            .then((response) => {\n                this.setState({\n                    currentPost: response.data,\n                    title: response.data.title,\n                    username: response.data.username,\n                    URL: response.data.URL,\n                    content: response.data.content\n            })})\n            .catch(error => console.error(error));\n\n        Axios.get('/api/comment/' + this.state.idForQuery)\n        .then(\n            (response) => {\n                this.setState({\n                    allComments: response.data\n                })})\n        .catch(error => {\n            console.error(error);\n            this.setState({\n                allComments: []\n            })    \n        });\n\n    }\n\n    componentDidUpdate() {\n    }\n\n    \n    submitDelete(){\n        Axios.delete('/api/post/' + this.state.currentPost._id)\n            .catch((error) => {\n                this.setState( {\n                    message: \"Fail to delete post\"\n                })\n            })\n        \n        Axios.delete('/api/comment/' + this.state.currentPost._id)\n            .then((response) => {\n                window.location.href =\"/\";\n            })\n            .catch((error) => {\n                this.setState( {\n                    message: \"Fail to delete all comments\"\n                })\n            })\n        \n    }\n\n    showEditandDelete(){\n        if(this.state.loginUser === this.state.currentPost.username){\n            return(\n                <div>\n                    <div onClick={() => this.changeToEditingMode()}>\n                        Edit\n                    </div>\n                    <div onClick={() => this.submitDelete()}>\n                        Delete\n                    </div>\n                </div>\n            \n            )\n        }\n    }\n\n    showPost(){\n        if(!this.state.editing){\n            return(\n                <div>\n                    <div>Title: {this.state.currentPost.title}</div>\n                    <div>Editor: {this.state.currentPost.username}</div>\n                    <div>{this.state.currentPost.postTime.slice(0,10) + \" \" + this.state.currentPost.postTime.slice(11,19) }</div>\n                    <div>URL: {this.state.currentPost.URL}</div>\n                    <div>OR</div>\n                    <div>Content: {this.state.currentPost.content}</div>\n                    <div >{this.showEditandDelete()}</div>\n                </div>\n            )\n        }else{\n            return(\n                <div>\n                    <label >Title:</label>\n                    <input type=\"text\" value={this.state.title} onChange={e => this.setState({title: e.target.value})}></input>\n                    <div>Editor:</div>{this.state.currentPost.username}\n                    {this.state.currentPost.postTime}\n                    <label >URL:</label>\n                    <input type=\"text\" value={this.state.URL} onChange={e => this.setState({URL: e.target.value})}></input>\n                    <div>OR</div>\n                    <label >Content:</label>\n                    <input type=\"text\" value={this.state.content} onChange={e => this.setState({content: e.target.value})}></input>\n                    <div onClick={() => this.submitEdit()}>Submit Edit</div>\n                </div>\n            )\n        }\n    }\n\n    submitEdit(){\n        const newPost ={}\n        newPost._id = this.state.currentPost._id;\n        newPost.title = this.state.title;\n        newPost.URL = this.state.URL;\n        newPost.content = this.state.content;\n\n        if((!newPost.content && !newPost.URL) || (newPost.content && newPost.URL)){\n            this.setState({\n                message: \"Only need URL or Content\"\n            })\n            return\n        }\n\n        if(!newPost.title){\n            return this.setState({\n                message: \"Please input title for the new post\"\n            })\n        }\n\n        Axios.put('/api/post', newPost)\n        .then((response) => {\n            const postID = response.data._id;\n            window.location.href = \"post?id=\" + postID;\n        })\n        .catch((error) => {\n            this.setState( {\n                message: \"Fail to update Post\"\n            })\n        })\n\n\n    }\n\n    changeToEditingMode(){\n        this.setState( {\n            editing:true\n        })\n\n    }\n\n\n    submitAddNewComment(){\n        const newComment = {\n            editorUsername:this.state.loginUser,\n            postID:this.state.idForQuery,\n            content : this.state.newComment\n        }\n        if(this.state.newComment){\n            Axios.post('/api/comment', newComment)\n            .then((response) => {\n                window.location.href = \"post?id=\" + this.state.idForQuery;\n            })\n            .catch((error) => {\n                this.setState( {\n                    message: \"Fail to add new comment\"\n                })\n            })\n        }\n\n\n    }\n\n    showAddSubmit(){\n        return(\n            <div>\n                <input type=\"text\" value={this.state.newComment} onChange={e => this.setState({newComment: e.target.value})}></input>\n                <div onClick={() => this.submitAddNewComment()}>Add Submit</div>\n            </div>\n\n        )\n    }\n\n    displayErrorMessage(){\n        if(this.state.message){\n            return this.state.message\n        }  \n    }\n\n\n    render() {\n        if(!this.state.currentPost){\n            return null;\n\n        }\n        return (\n            <div>\n                <Navbar></Navbar>\n                <div onClick={() => this.redirectToHomePage()}>Home</div>\n                {this.showPost()}\n                {this.displayErrorMessage()}\n                <h2>{this.state.allComments.length} comments</h2>\n                {this.showAddSubmit()}\n                <div>{this.state.allComments.map((singleComment, index)=><Comment key ={index} comment ={singleComment} loginUser = {this.state.loginUser}></Comment>)}</div>\n\n            </div>\n\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}